version: '1.0.{build}'
image: 
  # - Visual Studio 2019
  - Ubuntu
branches:
  only:
  - master
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  # - cmd: git config --global core.autocrlf true
  - sh: git config --global core.autocrlf true
install:
  # Install repo specific stuff here
before_build:
  # Display .NET Core version
  # - cmd: dotnet --version
  - sh: dotnet --version
  # Display minimal restore text
  # - cmd: dotnet restore ./Evolve.Migrations.Helper/Evolve.Migrations.Helper.csproj
  - sh: dotnet restore ./Evolve.Migrations.Helper/Evolve.Migrations.Helper.csproj
build_script:
  # output will be in ./src/bin/debug/netcoreapp1.1/publish
  # - cmd: dotnet publish -c Release ./Evolve.Migrations.Helper/Evolve.Migrations.Helper.csproj -f netcoreapp3.1 -r win-x64 --no-self-contained
  - sh: dotnet publish -c Release ./Evolve.Migrations.Helper/Evolve.Migrations.Helper.csproj -f netcoreapp3.1 -r win-x64 --no-self-contained
  - sh: dotnet publish -c Release ./Evolve.Migrations.Helper/Evolve.Migrations.Helper.csproj -f netcoreapp3.1 -r linux-x64 --no-self-contained
after_build:
  # For once the build has completed
artifacts:
 - path: './Evolve.Migrations.Helper/bin/Release/netcoreapp3.1/win-x64/publish' 
   name: evolve-migrations-helper_win-x64
   type: WebDeployPackage

 - path: './Evolve.Migrations.Helper/bin/Release/netcoreapp3.1/linux-x64/publish'
   name: evolve-migrations-helper_linux-x64
   type: WebDeployPackage
clone_depth: 1
test_script:
  # restore packages for our unit tests
  # - cmd: dotnet restore ./tests/tests.csproj --verbosity m
  # run the unit tests (requires changing into the test directory)
  # - cmd: cd tests
  # - cmd: dotnet xunit
on_finish :
  # any cleanup in here
deploy: off